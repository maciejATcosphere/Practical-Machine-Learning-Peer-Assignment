show
lm
colSums
dgamma
predict
setwd('/home/maciej/learning/Coursera/Machine-Learning/Assignment/')
set.seed(3885)
library(caret)
l
library(doMC)
registerDoMC(cores = 4)
data <- read.csv('data/training.csv')
submission_data <- read.csv('data/testing.csv')
inTrain <- createDataPartition(y=data$classe, p=0.6, list=FALSE)
training <- data[inTrain,]
testing <- data[-inTrain,]
data <- data[,-c(1)]
classe_dict <- aggregate(raw_timestamp_part_1 ~ classe, data=data, FUN=length)
barplot(classe_dict$raw_timestamp_part_1, names.arg=classe_dict$classe)
title("Distribution of classe")
not.na <- apply(training, 2 , function (col) { 1 - sum(is.na(col)) / nrow(training) }) > 0.03
training <- training[, not.na]
nzv <- nearZeroVar(training, saveMetrics=TRUE)
exclude_nzv <- rownames(subset(nzv, nzv == TRUE))
exclude_nzv
agg_dict <- aggregate(new_window ~ classe, data=data, FUN=sd)
barplot(agg_dict$raw_timestamp_part_1, names.arg=classe_dict$classe)
barplot(agg_dict$new_window, names.arg=classe_dict$classe)
agg_dict <- aggregate(skewness_pitch_dumbbell ~ classe, data=data, FUN=sd)
barplot(agg_dict$skewness_pitch_dumbbell, names.arg=classe_dict$classe)
training <- training[ , -which(names(training) %in% exclude_nzv)]
modFit <- train(classe ~ ., data=training, method='rf')
modFit
names(modFit)
modFit$results
modFit$results$Accuracy
modFit$results$Accuracy[2]
modFit$finalModel
names(modFit$finalModel)
modFit$finalModel$confusion
predictions <- predict(modFit, newdata=testing)
confusionMatrix(predictions, testing$classe)
confusionMatrix(predictions, testing$classe)$confusion
names(confusionMatrix(predictions, testing$classe))
confusionMatrix(predictions, testing$classe)$table
modFit$finalModel
modFit$accuracy
names(modFit)
modFit
modFit$finalModel
modFit
modFit$results
varImp(modFit)
names(training)
